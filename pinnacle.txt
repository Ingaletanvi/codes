#include<iostream>
#include<string>
using namespace std;
class pinnacle_club
{ private:
struct node{
    string name;
    int prn;
    node *next;
}*start;

public:
 pinnacle_club()
 { start=NULL;
 }
 
 void create();
 void display();
 void count();
 int retcount();
 void addpos(int n);
 void add();
void deletem();
void del(int n);
};

void pinnacle_club::create()
{ if(start==NULL)
{ cout<<"list is already exists";
return;
}
node *temp,*curr;
int ans=1;
do{
    temp=new node;
    temp->next=NULL;
    cout<<"enter prn";
    cin>>temp->prn;
    cout<<"enter name";
    cin>>temp->name;
    if(start==NULL)
    { start=temp;
      curr= temp;
    }
    else
    { curr->next=NULL;
    curr=curr->next;
    }
    cout<<"press 1 add one more member";
    cin>>ans;
}while(ans==1);
}

void pinnacle_club::display()
{ node *curr;
curr=start;
while(curr!=NULL)
{ cout<<curr->prn<<""<<curr->name<<"->"<<endl;
 curr=curr->next;
}
cout<<"\n NULL";
}

void pinnacle_club::count()
{
    node *curr;
    curr=start;
    int count=0;
    while(curr!=NULL)
    { count++;
    curr=curr->next;
    }
    cout<<"total memebers of club are"<<count<<endl;
}

int pinnacle_club::retcount()
{
    node *curr;
    curr=start;
    int count=0;
    while(curr!=NULL)
    { count++;
    curr=curr->next;
    }
     return count;
}

void pinnacle_club::addpos(int n)
{ if(n<=retcount())
{ node *temp,*curr;
  temp=new node;
  temp->next=NULL;
  cout<<"enter prn";
  cin>>temp->prn;
  cout<<"enter name";
  cin>>temp->name;
  
  curr=start;
  for(int i=0;i<n-1;i++)
  { curr=curr->next;
  }
  
  if(n==0)
  { temp->next=curr;
     start=temp;
  }
  else
  { temp->next=curr->next;
  curr->next=temp;
  }
} else
{ cout<<"member cannot be added"<<endl;
}
}

void pinnacle_club::add()
{
    int ch;
    
     cout<<"adding memebers to pinnacle club";
    cout<<"\n1.add president";
    cout<<"\n2.add secretary";
    cout<<"\n3.add member";
    cout<<"\n4.add member for specific position";
    cout<<"\n0. exit";
    cout<<"enter you choice";
    cin>>ch;
    
    switch(ch)
    { case 1:
       cout<<"add president";
       addpos(0);
       break;
       
      case 2:
        cout<<"add secretary";
        addpos(retcount());
        break;
        
     case 3:
       cout<<"add member";
       addpos(retcount()-1);
       break;
     case 4:
       cout<<"add member for specific position";
       cout<<"insert where you want to add";
       cin>>ch;
       if(ch==0||ch==retcount()-1)
       { cout<<"member can not be add";
       }
       else 
       addpos(ch);
       break;
        
    case 0:
         return;
         
    default:
         cout<<"wrong choice";
         break;
    }
    }
    
void pinnacle_club::deletem()
{
    int ch;
    cout<<"deleting memebers to pinnacle club";
    cout<<"\n1.delete president";
    cout<<"\n2.delete secretary";
    cout<<"\n3.delete member";
    
    cout<<"\n0. exit";
    cout<<"enter you choice";
    cin>>ch;
    
    switch(ch)
    { case 1:
       cout<<"delete president";
       del(0);
       break;
       
      case 2:
        cout<<"delete secretary";
        del(retcount());
        break;
        
     case 3:
       cout<<"delete member";
       del(retcount()-1);
       break;
       
      
        
    case 0:
         return;
         
    default:
         cout<<"wrong choice";
         break;
    }
    }
void pinnacle_club::del(int n)
{ if(start==NULL)
{ cout<<"list is empty,members cannot be delete";
return;
}
node *curr;
if(n==0)
{ curr=start;
start=start->next;
delete(start);
}
}

int main()
{ 
    pinnacle_club a;
    int ch;
   
    
    do{ cout<<"\n1 create";
        cout<<"\n2.display";
        cout<<"\n3.count";
        cout<<"\n4.add";
        cout<<"\n5.delete";
        cout<<"\n0.exit";
        cout<<"enter your choice";
        cin>>ch;
        
        switch(ch)
        {   case 1:
               a.create();
               break;
            case 2:
              a.display();
              break;
        case 3:
             a.count();
             break;
        case 4:
             a.add();
             break;
             
        case 5:
             a.deletem();
             break;
        case 0:
           cout<<"exciting";
           break;
        default:
            cout<<"wrong choice"<<endl;
            break;
        }
    } while(ch!=0);
    return 0;
}
